import * as React from 'react';
import {
  ContextualMenuItemType,
  IContextualMenuProps,
  IContextualMenuItem,
} from '@fluentui/react/lib/ContextualMenu';
import { DefaultButton } from '@fluentui/react/lib/Button';

export const ContextualMenuDefaultExample: React.FunctionComponent = () => {
  const [menuProps, setMenuProps] = React.useState<IContextualMenuProps>({
    shouldFocusOnMount: true,
    items: [],
  });

  React.useEffect(() => {
    const loadMenuItems = async () => {
      // Simulate SharePoint permission check here
      const hasEditPermission = true; // replace this with actual logic

      const dynamicItems: IContextualMenuItem[] = [
        { key: 'newItem', text: 'New', onClick: () => console.log('New clicked') },
        { key: 'divider_1', itemType: ContextualMenuItemType.Divider },
        { key: 'rename', text: 'Rename', onClick: () => console.log('Rename clicked') },
        { key: 'properties', text: 'Properties', onClick: () => console.log('Properties clicked') },
        { key: 'linkNoTarget', text: 'Link same window', href: 'http://bing.com' },
        { key: 'linkWithTarget', text: 'Link new window', href: 'http://bing.com', target: '_blank' },
        {
          key: 'linkWithOnClick',
          name: 'Link click',
          href: 'http://bing.com',
          onClick: (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {
            alert('Link clicked');
            ev.preventDefault();
          },
          target: '_blank',
        },
        {
          key: 'disabled',
          text: 'Disabled item',
          disabled: true,
          onClick: () => console.error('Disabled item should not be clickable.'),
        },
      ];

      if (hasEditPermission) {
        dynamicItems.splice(3, 0, { key: 'edit', text: 'Edit', onClick: () => console.log('Edit clicked') });
      }

      setMenuProps({
        shouldFocusOnMount: true,
        items: dynamicItems,
      });
    };

    loadMenuItems().catch(console.error);
  }, []);

  return <DefaultButton text="Click for ContextualMenu" menuProps={menuProps} />;
};
